class Solution {
public:
    long long totalCost(vector<int>& costs, int k, int c) {
        priority_queue<int,vector<int> ,greater<int>> pq1,pq2;
        long long ans = 0;
        int n = costs.size();
        int l,r;
        for(int i=0;i<c;i++)
        {pq1.push(costs[i]); l =i;}
        for(int i=n-1;i>=n-c && i>=c;i--)
        {pq2.push(costs[i]);r=i;}
        while(k--)
        {
            if(!pq1.empty() && (pq2.empty() || pq1.top()<=pq2.top()))
            {
                ans+=pq1.top();
                pq1.pop();
                l++;
                if(l<r)
                {pq1.push(costs[l]);}
            }
            else if(pq1.empty() || pq2.top()<pq1.top())
            {
                ans+=pq2.top();
                pq2.pop();
                r--;
                if(r>l)
                {pq2.push(costs[r]);}
            }
        }
        return ans;
    }
};
